[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Nutrients Tracking",
    "section": "",
    "text": "1 Introduction\nLiving abroad often means taking on the responsibility of preparing one’s own meals, which can make it challenging to ensure a balanced and healthy diet. Understanding the nutritional content of food is crucial, especially for individuals with specific dietary needs, such as increasing iron intake or reducing sugar consumption. However, identifying the right foods to meet these needs can be overwhelming without reliable information. This project leverages data from the United States Department of Agriculture (USDA), which provides comprehensive details on the nutritional composition of various foods. By conducting exploratory data analysis and creating visualizations, this project aims to simplify the process of identifying nutrient-rich foods and making informed dietary decisions, ultimately supporting better health and well-being.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data",
    "section": "",
    "text": "2.1 Read Data and Description\nFor this project, we utilized the FoodData Central API provided by the United States Department of Agriculture (USDA) to access detailed nutritional data. This API is designed to help developers incorporate nutrient information into their applications by providing comprehensive documentation about the database structure and data elements. Using this API, we collected data on 10,000 branded food items, capturing 24 features such as brand name, food category, package weight, ingredients, and various nutrients and vitamins. The data were exported to a CSV file and imported into RStudio for analysis. While the dataset is rich in information, we encountered missing values in some fields, particularly for ingredients, as not all foods have complete nutritional details. Despite this, the data offer valuable insights into nutrient composition, enabling us to identify and address gaps in dietary information. The data source is well-documented and regularly updated by the USDA, ensuring reliability and accessibility for research purposes.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#read-data-and-description",
    "href": "data.html#read-data-and-description",
    "title": "2  Data",
    "section": "",
    "text": "2.1.1 Load required library\n\n\nCode\nlibrary(readr)\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ purrr     1.0.2\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(dplyr)\nlibrary(readr)\n\n\n\n\n2.1.2 Data Overview\nThe dataset was downloaded from xxxxxxxxxxxxxxxxxxxx and saved as “Branded Nutrients 10000.csv”.\n\n\nCode\ndata &lt;- read_csv(\"Branded Nutrients_Dataset.csv\",\n                 show_col_types = FALSE)\n\n\nIn this dataset, there are 10,000 rows of data, where each row refers to a product. There are total 24 columns including information listed below.\n\n“fdcId”\n“description”\n“foodCategory”\n“brandOwner”\n“brandName”\n“packageWeight”\n“publishedDate”\n“Protein G”\n“Total lipid (fat) G” \n“Carbohydrate, by difference G”\n“Energy KCAL”\n“Total Sugars G”\n“Fiber, total dietary G”\n“Calcium, Ca MG”\n“Iron, Fe MG”\n“Sodium, Na MG”\n“Vitamin C, total ascorbic acid MG”\n“Cholesterol MG”\n“Fatty acids, total trans G”\n“Fatty acids, total saturated G”\n“Vitamin A UG”\n“Potassium, K MG”\n“Vitamin D (D2 + D3) UG”\n“Sugars, added G”\n\nDisplay the first few rows\n\n\nCode\nhead(data)\n\n\n# A tibble: 6 × 24\n    fdcId description            foodCategory brandOwner brandName packageWeight\n    &lt;dbl&gt; &lt;chr&gt;                  &lt;chr&gt;        &lt;chr&gt;      &lt;chr&gt;     &lt;chr&gt;        \n1 2617100 ALL NATURAL GLUTEN FR… Frozen Poul… Golden Pl… GOLDEN P… 24 oz        \n2 2604504 ALL NATURAL ROSEMARY … Flavored Ri… SLT Foods… HERITAGE… 6.5 oz       \n3 2570670 ARTISANAL COLLECTION … Pasta by Sh… Barilla G… BARILLA   1 lb         \n4 2607109 AUTHENTIC BARREL RIPE… Cheese       Wdh, LLC   APHRODITE 6 oz         \n5 1861692 BERRY NUT BLEND BREAK… Popcorn, Pe… Snyder's-… EMERALD   212.5 g/7.5 …\n6 2624305 BLACK CHERRY PURE ENE… Soda         Energy Be… TRUE NOR… 12 fl oz     \n# ℹ 18 more variables: publishedDate &lt;chr&gt;, `Protein G` &lt;dbl&gt;,\n#   `Total lipid (fat) G` &lt;dbl&gt;, `Carbohydrate, by difference G` &lt;dbl&gt;,\n#   `Energy KCAL` &lt;dbl&gt;, `Total Sugars G` &lt;dbl&gt;,\n#   `Fiber, total dietary G` &lt;dbl&gt;, `Calcium, Ca MG` &lt;dbl&gt;,\n#   `Iron, Fe MG` &lt;dbl&gt;, `Sodium, Na MG` &lt;dbl&gt;,\n#   `Vitamin C, total ascorbic acid MG` &lt;dbl&gt;, `Cholesterol MG` &lt;dbl&gt;,\n#   `Fatty acids, total trans G` &lt;dbl&gt;, …\n\n\nCheck column names\n\n\nCode\ncolnames(data)\n\n\n [1] \"fdcId\"                             \"description\"                      \n [3] \"foodCategory\"                      \"brandOwner\"                       \n [5] \"brandName\"                         \"packageWeight\"                    \n [7] \"publishedDate\"                     \"Protein G\"                        \n [9] \"Total lipid (fat) G\"               \"Carbohydrate, by difference G\"    \n[11] \"Energy KCAL\"                       \"Total Sugars G\"                   \n[13] \"Fiber, total dietary G\"            \"Calcium, Ca MG\"                   \n[15] \"Iron, Fe MG\"                       \"Sodium, Na MG\"                    \n[17] \"Vitamin C, total ascorbic acid MG\" \"Cholesterol MG\"                   \n[19] \"Fatty acids, total trans G\"        \"Fatty acids, total saturated G\"   \n[21] \"Vitamin A UG\"                      \"Potassium, K MG\"                  \n[23] \"Vitamin D (D2 + D3) UG\"            \"Sugars, added G\"",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\nWe noticed that except for fdcId and description, all other columns have missing values in different levels. Therefore, we examine the percentage of missing values for all columns.\n\n\nCode\nmissing_summary &lt;- data.frame(\n  Column = colnames(data),\n  MissingCount = colSums(is.na(data)),\n  MissingPercent = colSums(is.na(data)) / nrow(data) * 100\n) |&gt; \n  arrange(desc(MissingPercent))\n\nggplot(missing_summary, aes(x = reorder(Column, -MissingPercent), y = MissingPercent)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  theme_minimal() +\n  scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0, 100)) +  # Adjust y-axis breaks\n  labs(\n    title = \"Percentage of Missing Values per Nutrient\",\n    x = \"Nutrients\",\n    y = \"Percentage of Missing Values\"\n  ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nFrom above, we can see that there are few missing values for main nutrients such as Protein G, Energy KCAL, Total lipid (fat) G, with less than 1% missing values. Also we have most brandOwner information with 2.27% missing values.\nFor nutrients that are not always displayed on packages, including Vitamins, Sugars, added G, we have high portions of missing values. Therefore, in this project, we would focus on main nutrients in most of the time, and address supplemented nutrients when it is necessary.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  }
]